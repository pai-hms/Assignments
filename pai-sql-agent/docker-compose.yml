services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15-alpine
    container_name: pai-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pai_sql_agent
    ports:
      - "5432:5432"
    volumes:
      # 데이터 영속성을 위한 볼륨 마운트
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pai_sql_agent"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # PAI SQL Agent 애플리케이션
  app:
    build: .
    container_name: pai-sql-agent
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/pai_sql_agent
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SGIS_API_KEY=${SGIS_API_KEY:-}
      - SGIS_SECRET_KEY=${SGIS_SECRET_KEY:-}
      - DEBUG=true
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
        echo 'PAI SQL Agent 시작 중...' &&
        python src/database/init_data.py &&
        echo '데이터베이스 초기화 완료' &&
        uvicorn webapp.main:app --host 0.0.0.0 --port 8000 --reload
      "

# 볼륨 설정
volumes:
  postgres_data:
    driver: local